Servidor corriendo en el puerto 8082
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Username" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Username" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Username");ALTER TABLE "public"."Users" ALTER COLUMN "Username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Username" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Username" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Username");ALTER TABLE "public"."Users" ALTER COLUMN "Username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Username" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Username" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Username");ALTER TABLE "public"."Users" ALTER COLUMN "Username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Email" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Email" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Email");ALTER TABLE "public"."Users" ALTER COLUMN "Email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Username" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Username" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Username");ALTER TABLE "public"."Users" ALTER COLUMN "Username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Email" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Email" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Email");ALTER TABLE "public"."Users" ALTER COLUMN "Email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Enable" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" SET DEFAULT true;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" TYPE BOOLEAN;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Pwd" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Email" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Email" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Email");ALTER TABLE "public"."Users" ALTER COLUMN "Email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Enable" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" SET DEFAULT true;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" TYPE BOOLEAN;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Email" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Email" DROP DEFAULT;ALTER TABLE "public"."Users"  ADD UNIQUE ("Email");ALTER TABLE "public"."Users" ALTER COLUMN "Email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Enable" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" SET DEFAULT true;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" TYPE BOOLEAN;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Enable" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" SET DEFAULT true;ALTER TABLE "public"."Users" ALTER COLUMN "Enable" TYPE BOOLEAN;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "ProfileImage" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "Rol" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoComercios'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoComercios'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoComercios'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoComercios'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoComercios' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoComercios' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoComercios' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoComercios' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoComercios' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoComercios' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoComercios' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoComercios' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoComercios"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoComercios"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoComercios"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoComercios"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "Nombre" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoComercios" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoComercios' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoComercios' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoComercios' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoComercios' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoRepartidors'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoRepartidors'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoRepartidors'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoRepartidors' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoRepartidors' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoRepartidors' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoRepartidors' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'InfoRepartidors'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoRepartidors' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoRepartidors' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'InfoRepartidors' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'InfoRepartidors' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" TYPE TEXT;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Nombre_Completo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" TYPE TEXT;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Usuario_ID" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors"  ADD FOREIGN KEY ("Usuario_ID") REFERENCES "public"."Users" ("ID");
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" TYPE TEXT;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "CI" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoRepartidors' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "Foto" TYPE TEXT;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoRepartidors' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoRepartidors' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Pedidos'
Executing (default): ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."InfoRepartidors" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Pedidos'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'InfoRepartidors' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Pedidos'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Pedidos_Estatus' GROUP BY 1
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Pedidos'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Pedidos_Estatus' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Pedidos' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Pedidos' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Pedidos_Estatus' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Pedidos_Estatus' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Pedidos' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Pedidos' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Pedidos' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Pedidos' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Pedidos' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Pedidos' AND tc.table_catalog = 'Prueba' AND tc.table_schema = 'public'
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Comercio_ID" SET NOT NULL;ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Comercio_ID") REFERENCES "public"."InfoComercios" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Repartidor_ID") REFERENCES "public"."InfoRepartidors" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Comercio_ID" SET NOT NULL;ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Comercio_ID") REFERENCES "public"."InfoComercios" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Comercio_ID" SET NOT NULL;ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Comercio_ID") REFERENCES "public"."InfoComercios" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" SET DEFAULT 'Buscando Repartidor';DO 'BEGIN CREATE TYPE "public"."enum_Pedidos_Estatus" AS ENUM(''Buscando Repartidor'', ''En Proceso'', ''Completado''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" TYPE "public"."enum_Pedidos_Estatus" USING ("Estatus"::"public"."enum_Pedidos_Estatus");
Executing (default): ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Repartidor_ID") REFERENCES "public"."InfoRepartidors" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Repartidor_ID") REFERENCES "public"."InfoRepartidors" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" SET DEFAULT 'Buscando Repartidor';DO 'BEGIN CREATE TYPE "public"."enum_Pedidos_Estatus" AS ENUM(''Buscando Repartidor'', ''En Proceso'', ''Completado''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" TYPE "public"."enum_Pedidos_Estatus" USING ("Estatus"::"public"."enum_Pedidos_Estatus");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" SET DEFAULT 'Buscando Repartidor';DO 'BEGIN CREATE TYPE "public"."enum_Pedidos_Estatus" AS ENUM(''Buscando Repartidor'', ''En Proceso'', ''Completado''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" TYPE "public"."enum_Pedidos_Estatus" USING ("Estatus"::"public"."enum_Pedidos_Estatus");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Descripcion" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Comercio_ID" SET NOT NULL;ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Comercio_ID") REFERENCES "public"."InfoComercios" ("ID");
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos"  ADD FOREIGN KEY ("Repartidor_ID") REFERENCES "public"."InfoRepartidors" ("ID");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Pedidos' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" SET DEFAULT 'Buscando Repartidor';DO 'BEGIN CREATE TYPE "public"."enum_Pedidos_Estatus" AS ENUM(''Buscando Repartidor'', ''En Proceso'', ''Completado''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "public"."Pedidos" ALTER COLUMN "Estatus" TYPE "public"."enum_Pedidos_Estatus" USING ("Estatus"::"public"."enum_Pedidos_Estatus");
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Pedidos' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Pedidos' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Modelo Pedido sincronizado con la base de datos.
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Desde" TYPE VARCHAR(255);
Modelo User sincronizado con la base de datos.
Modelo InfoRepartidor sincronizado con la base de datos.
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Hasta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "Foto_Pedido" TYPE TEXT;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "public"."Pedidos" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a, pg_namespace s WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Pedidos' AND s.oid = t.relnamespace AND s.nspname = 'public' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Modelo InfoComercio sincronizado con la base de datos.
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luismarquina';
Luis 123 Lg@fusbje.com 123 {
  username: 'Luis',
  pwd: '123',
  email: 'Lg@fusbje.com',
  idNumber: '123'
}
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Email" = 'Lg@fusbje.com';
Executing (default): INSERT INTO "public"."Users" ("ID","Username","Pwd","Email","Enable","Rol","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "ID","Username","Pwd","Email","Enable","ProfileImage","Rol","createdAt","updatedAt";
Luis 123 Lg@fusbje.com 123 {
  username: 'Luis',
  pwd: '123',
  email: 'Lg@fusbje.com',
  idNumber: '123'
}
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Email" = 'Lg@fusbje.com';
Executing (default): SELECT "ID", "Username", "Pwd", "Email", "Enable", "ProfileImage", "Rol", "createdAt", "updatedAt" FROM "public"."Users" AS "User" WHERE "User"."Username" = 'Luis';
